apiVersion: v1
kind: ConfigMap
metadata:
  name: aleksandrovich-conf
data:
  aleksandrovich.conf: |
    server {
        listen 80;
        root /usr/share/nginx/html;
        server_name aleksandrovich.ml;
        index index.html;
        location / {
          try_files $uri $uri/ =404;
        }

        location /app/index.html {
        proxy_pass http://localhost:88/index.html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~*\.mp3$ {
          root /var/www/html;
          try_files $uri $uri/ =404;
          add_header Content-Disposition "attachment";
          add_header Content-Type "application/force-download";
          add_header Content-Type "application/octet-stream";
        }

        location ~* \.(jpg|jpeg)$ {
                root /var/www/html;
                image_filter rotate 180;


        }

        location ~* \.(png)$ {
                root /var/www/html;
        }

        location /apache/info.php {
        proxy_pass http://3.73.83.234:8080/info.php;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 88;
        root /var/www/app;
        index index.html index.htm;
        server_name aleksandrovich.ml;

        location / {
        try_files $uri $uri/ =404;
        }
    }


    server {
      server_name aws.aleksandrovich.ml;
      rewrite ^/(.*)$ https://aws.amazon.com//$1 permanent;
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: vadimalexandrovich/nginx:task-28-v1
        ports:
        - containerPort: 80
        startupProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 20
            periodSeconds: 10
        readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
        livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
        resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.3"

        volumeMounts:
          - name: alexandrovich-conf-volume
            mountPath: /etc/nginx/conf.d/
            readOnly: true

      volumes:
      - name: alexandrovich-conf-volume
        configMap:
          name: aleksandrovich-conf

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: default
spec:
  selector:
    app: nginx
  type: NodePort
  ports:
    - port: 80
      nodePort: 31000
      targetPort: 80
